---
export interface Props {
  variant?: 'primary' | 'secondary' | 'tertiary' | 'accent' | 'success' | 'warning' | 'error' | 'info';
  size?: 'sm' | 'md' | 'lg';
  href?: string;
  type?: 'button' | 'submit' | 'reset';
  class?: string;
}

const { 
  variant = 'primary', 
  size = 'md', 
  href, 
  type = 'button',
  class: className = '',
  ...props 
} = Astro.props;

const baseClasses = 'inline-flex items-center justify-center font-medium rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-light-bg dark:focus:ring-offset-dark-bg disabled:opacity-50 disabled:cursor-not-allowed';

const variantClasses = {
  primary: 'bg-primary-500 hover:bg-primary-600 active:bg-primary-700 text-white focus:ring-primary-500',
  secondary: 'bg-secondary-500 hover:bg-secondary-600 active:bg-secondary-700 text-white focus:ring-secondary-500',
  tertiary: 'bg-tertiary-500 hover:bg-tertiary-600 active:bg-tertiary-700 text-white focus:ring-tertiary-500',
  accent: 'bg-accent-500 hover:bg-accent-600 active:bg-accent-700 text-white focus:ring-accent-500',
  success: 'bg-success-500 hover:bg-success-600 active:bg-success-700 text-white focus:ring-success-500',
  warning: 'bg-warning-500 hover:bg-warning-600 active:bg-warning-700 text-white focus:ring-warning-500',
  error: 'bg-error-500 hover:bg-error-600 active:bg-error-700 text-white focus:ring-error-500',
  info: 'bg-info-500 hover:bg-info-600 active:bg-info-700 text-white focus:ring-info-500',
};

const sizeClasses = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-4 py-2 text-base',
  lg: 'px-6 py-3 text-lg',
};

const classes = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;

const Element = href ? 'a' : 'button';
---

<Element 
  class={classes}
  href={href}
  type={!href ? type : undefined}
  target={href ? '_blank' : undefined}
  rel={href ? 'noopener noreferrer' : undefined}
  {...props}
>
  <slot />
</Element>
